
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        application live {
            live on;
            record off;

            # allow publishing from all (change this to your ip if you wish to lock to ip address)
            allow publish all;

            # uncomment this if you are going to deny every ip other than yours
            # deny publish all;

            # push to all sub applications we will create (one each for each application)
            push rtmp://localhost/youtube;
            push rtmp://localhost/facebook;
            # push rtmp://localhost/mixer;

            exec ffmpeg -i rtmp://localhost/$app/$name
                -threads 1
                -c:v libx264
                -profile:v baseline
                -b:v 350K
                -s 640x360
                -f flv
                -c:a aac
                -ac 1
                -strict -2
                -b:a 56k rtmp://localhost/$app/$name;
        }

        application youtube {
            live on;
            record off;

            # only allow this machine to publish
            allow publish 127.0.0.1;
            deny publish all;

            # push url, this will be your stream url and stream key together
            push rtmp://x.rtmp.youtube.com/live2/qr5m-16ky-46s3-9k9k;
        }
        
        application facebook {
            live on;
            record off;

            # only allow this machine to publish
            allow publish 127.0.0.1;
            deny publish all;

            # push url, this will be your stream url and stream key together
            # TODO: when envsubst works - for now hard code rtmp://$ENV{"STUNNEL_URL"}/rtmp/...
            push rtmp://stunnel-service:19350/rtmp/730010654084433?s_bl=0&s_ps=1&s_sw=0&s_vt=api-s&a=AbwNCJ_rud1rkOGP;
        }

        application live360p {
            live on;
            record off;
        }
    }
}
